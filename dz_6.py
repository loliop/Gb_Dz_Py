# Дана последовательность чисел. Получить список уникальных элементов заданной последовательности.
# ​Пример:​[1, 2, 3, 5, 1, 5, 3, 10] => [2, 10]​

from cgitb import reset
s = [1, 1, 2, 3, 4, 5, 2, 3, 5, 6]

k = [i for i in s if s.count(i) == 1]
print(k)


v = [1, 1, 2, 3, 4, 5, 2, 3, 5, 6]

b = filter(lambda f: v.count(f) == 1, v)
print(list(b))


# Задание​Формат: На семинаре и в лекциях мы разобрали новые функции, которые позволяют улучшить код прошлых задач.​​Задача: предложить улучшения кода для уже решённых задач(не менее 4 задач нужно улучшить):​
# С помощью использования **лямбд, filter, map, zip, enumerate, list comprehensio ниже задачи которые улучшил


# 1 задача

# Напишите программу, удаляющую из текста все слова, содержащие ""абв"".

lst = str(input())
f = filter(lambda p: p.find('абв') == -1, lst)
print(list(f))

# 2 задача

# .Вводится список целых чисел в одну строчку через пробел. Необходимо оставить в нем только двузначные числа. Реализовать программу с использованием функции filter. Результат отобразить на экране в виде последовательности оставшихся чисел в одну строчку через пробел.
# пример - 8 11 0 -23 140 1 => 11 -23


print("vvedite stroku :")

a = input()

arr = a.split(" ")

arr = map(lambda x: int(x),  arr)

arr = filter(lambda x: abs(x) >= 10 and abs(x) <= 99, arr)
print(" ".join(map(lambda x: str(x), arr)))


# 3 задача Дан список, вывести отдельно буквы и цифры.


a = ("a", 'b', '2', '3', 'c')
# b = ( 'a' , 'b' , 'c')
# c = ( '1', '2', '3')

num = list(filter(lambda x: x >= '0' and x <= '9', a))
str = list(filter(lambda x: x.lower() >= 'a' and x.lower() <= 'z', a))
print(num, str)


# 4 задача Преобразовать набора списков
users = ['user1', 'user2', 'user3', 'user4', 'user5']
ids = [4, 5, 9, 14, 7]
salary = [111, 222, 333]

n = list(zip(users, ids, salary))
a, b, c = zip(*n)
print(n)
print(a, b, c)
